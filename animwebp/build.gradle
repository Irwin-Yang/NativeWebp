apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //  moduleName "jary"         //生成的so名字
            abiFilters "armeabi-v7a", "arm64-v8a"
//            stl "stlport_static"    //打开.c 的 debug （此句是打开的debug的关键）
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        ndkBuild {
            path file('src/main/jni/Android.mk')
        }
    }
}


//修改jar名字+将指定jar生成的地方
task makeJar(type: Copy) {
    //删除存在的
    delete '../release/'
    //设置拷贝的文件
    from('build/outputs/aar/')
    //打进jar包后的文件目录
    into('../release/')
    include('animwebp-release.aar')
    //重命名
    rename('animwebp-release.aar', 'animwebp-V' + android.defaultConfig.versionName + '.aar')
}

makeJar.dependsOn(build)


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
